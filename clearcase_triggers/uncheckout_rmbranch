#!/bin/sh

lines=`cat $0 | wc -l`
lines=`expr $lines - 14`
tail -$lines $0 > /tmp/runperl$$
echo "# $0 $*" >> /tmp/runperl$$
while [ $# -ne 0 ]
do
    line=$1
    shift
    totline="$totline\`$line"
done
exec perl /tmp/runperl$$ $0 $totline

unlink($0);

sub strippath
{
    local($fullname) = @_;

    $fullname =~ m|^(.*/)?([^/]*)$|;
    ($path,$file) = ($1,$2);
    return($file,$path);
}

($0) = &strippath(shift);

$args = "@ARGV";
$args =~ s/^.//;
@ARGV = split('\`',$args);

# perl begins here
use Env;

$cleartool = "/usr/atria/bin/cleartool";

$xpn = $ENV{'CLEARCASE_XPN'};
$xpn =~ m|^(.*)/(\d+)$|;
$branch = $1;
$version = $2;
($file) = ($branch =~ /^(.*)@@/);

if ($version == 0)
{
    $status = system("$cleartool rmbranch -force $branch");
    $status /= 256;

    # Check to see if the file is still on a branch
    $xpn = `cleartool desc -fmt "%Xn" $file`;
    ($branch, $version) = ($xpn =~ m|^(.*)/(\d+)$|);

    if ($version == 0)
    {
        # Get all of the files that are still on the branch.  If there are any 
        # directories there, someone is still doing work on this branch and we 
        # don't want to remove it.

        # Get the listing of files.
        opendir(DIR,"$branch");
        @files = readdir(DIR);
        closedir(DIR);
        
        # Prepend the branch name so we have a file path we can work with.
        @files = map($_ = "$branch/$_",@files);
        # Extract the directories that aren't "." or ".."
        @files = grep(-d&&!m|/..?$|,@files);

        unless (@files)
        {
            $status = system("$cleartool rmbranch -force $branch");
            $status /= 256;
        }
    }
    exit($status);
}

exit(0);
