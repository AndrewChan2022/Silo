#!/bin/sh
#-----------------------------------------------------------------------
#
# MESHTV-BUILD-OPEN - Build the meshtv distributions on the open network.
#
# Author: Eric Brugger
# Date:   April 19, 2000
#
# Usage:
#    meshtv-build-open -v <version> -d <distribution>
#
#-----------------------------------------------------------------------

test=no

#
# Parse the execute line, providing default values for error checking.
#
hyper=true
kickit=true
sunspot=true
gps=true
blue=true
riptide=true

ver=undefined
dist=undefined

#
# The loop is executed once for each symbol on the execute line.  This means
# that $1 may be blank for later executions of the loop if any "shift 2"
# commands are executed.  The variable abc is not used in the loop.
#
for abc
do
   case $1 in
      -none)
         hyper=false
         gps=false
         blue=false
         riptide=false
         kickit=false
         sunspot=false
         shift
         ;;
      -hyper)
         hyper=false
         shift
         ;;
      +hyper)
         hyper=true
         shift
         ;;
      -kickit)
         kickit=false
         shift
         ;;
      +kickit)
         kickit=true
         shift
         ;;
      -sunspot)
         sunspot=false
         shift
         ;;
      +sunspot)
         sunspot=true
         shift
         ;;
      -gps)
         gps=false
         shift
         ;;
      +gps)
         gps=true
         shift
         ;;
      -blue)
         blue=false
         shift
         ;;
      +blue)
         blue=true
         shift
         ;;
      -riptide)
         riptide=false
         shift
         ;;
      +riptide)
         riptide=true
         shift
         ;;
      -v)
         ver=$2
         shift 2
         ;;
      -d)
         dist=$2
         shift 2
         ;;
   esac
done

#
# Check that both the version and distribution name were provided.
#
if [ $ver = undefined ]
then
   echo "Usage: -v <version> -d <distribution>"
   exit
fi
if [ $dist = undefined ]
then
   echo "Usage: -v <version> -d <distribution>"
   exit
fi

#
# Check that the distribution exists.
#
distfile=$dist.sh
if [ ! -f $distfile ]
then
   echo "Distribution file doesn't exist."
   exit
fi

ver2=`echo $ver | tr "." "_"`

#
# Build on hyper.
#
rm -f hyper
cat <<EOF > hyper
#!/bin/sh
cd /scratch1/brugger
rm -rf hyper/meshtvbuild
mkdir hyper/meshtvbuild
cd hyper/meshtvbuild
mv ../$dist.sh .
sh $dist.sh > buildlog 2>&1
cd $dist
env CC=cc CFLAGS="-O2 -n32" ./configure >> ../buildlog 2>&1
env PARALLEL=2 make -P >> ../buildlog 2>&1
cp /usr/local/meshtv/bin/mpeg_encode bin
clearcase_bin/meshtv-bin-dist -v $ver >> ../buildlog 2>&1
mv meshtv$ver2.irix6.tar.gz ..
cp clearcase_bin/meshtv-install ..
cd ..
./meshtv-install $ver irix6 meshtv >> buildlog 2>&1
scp $dist/INSTALL_NOTES kickit:/scratch/brugger/meshtv$ver
scp $dist/clearcase_bin/meshtv-install kickit:/scratch/brugger/meshtv$ver
scp meshtv$ver2.irix6.tar.gz kickit:/scratch/brugger/meshtv$ver
rm -f resultlog
uname -a > resultlog 2>&1
ls -l >> resultlog 2>&1
mail brugger1@llnl.gov < resultlog
EOF

if [ $hyper = true ]
then
   if [ $test = no ]
   then
      scp hyper hyper:build_meshtv_hyper
      scp $dist.sh hyper:/scratch1/brugger/hyper
      ssh hyper "chmod 750 build_meshtv_hyper;./build_meshtv_hyper" &
   fi
fi

#
# Build on kickit.
#
rm -f kickit
cat <<EOF > kickit
#!/bin/sh
cd /usr/tmp/brugger
rm -rf kickit/meshtvbuild
mkdir kickit/meshtvbuild
cd kickit/meshtvbuild
mv ../$dist.sh .
sh $dist.sh > buildlog 2>&1
cd $dist
./configure --without-readline >> ../buildlog 2>&1
make -j 4 >> ../buildlog 2>&1
clearcase_bin/meshtv-bin-dist -v $ver >> ../buildlog 2>&1
mv meshtv$ver2.linux.tar.gz ..
cp clearcase_bin/meshtv-install ..
cd ..
./meshtv-install $ver linux meshtv >> buildlog 2>&1
scp meshtv$ver2.linux.tar.gz kickit:/scratch/brugger/meshtv$ver
rm -f resultlog
uname -a > resultlog 2>&1
ls -l >> resultlog 2>&1
mail brugger1@llnl.gov < resultlog
EOF

if [ $kickit = true ]
then
   if [ $test = no ]
   then
      scp kickit kickit:build_meshtv_kickit
      scp $dist.sh kickit:/usr/tmp/brugger/kickit
      ssh kickit "chmod 750 build_meshtv_kickit;./build_meshtv_kickit" &
   fi
fi

#
# Build on sunspot.
#
rm -f sunspot
cat <<EOF > sunspot
#!/bin/sh
cd /export/scratch/brugger
rm -rf sunspot/meshtvbuild
mkdir sunspot/meshtvbuild
cd sunspot/meshtvbuild
mv ../$dist.sh .
sh $dist.sh > buildlog 2>&1
cd $dist
env CC=cc CFLAGS=-xO2 ./configure --disable-jpeg >> ../buildlog 2>&1
cd meshtv
sed "s/-xO2/-xO1/" Makefile > Makefile.new
rm Makefile
mv Makefile.new Makefile
cd ..
make -j 4 >> ../buildlog 2>&1
clearcase_bin/meshtv-bin-dist -v $ver >> ../buildlog 2>&1
mv meshtv$ver2.solaris5.7.tar.gz ..
cp clearcase_bin/meshtv-install ..
cd ..
./meshtv-install $ver solaris5.7 meshtv >> buildlog 2>&1
scp meshtv$ver2.solaris5.7.tar.gz kickit:/scratch/brugger/meshtv$ver
rm -f resultlog
uname -a > resultlog 2>&1
ls -l >> resultlog 2>&1
mail brugger1@llnl.gov < resultlog
EOF

if [ $sunspot = true ]
then
   if [ $test = no ]
   then
      scp sunspot sunspot:build_meshtv_sunspot
      scp $dist.sh sunspot:/export/scratch/brugger/sunspot
      ssh sunspot "chmod 750 build_meshtv_sunspot;./build_meshtv_sunspot" &
   fi
fi

#
# Build on gps.
#
rm -f gps
cat <<EOF > gps
#!/bin/sh
cd /nfs/tmp1/brugger
rm -rf gps/meshtvbuild
mkdir gps/meshtvbuild
cd gps/meshtvbuild
mv ../$dist.sh .
sh $dist.sh > buildlog 2>&1
cd $dist
./configure --without-readline >> ../buildlog 2>&1
make >> ../buildlog 2>&1
clearcase_bin/meshtv-bin-dist -v $ver >> ../buildlog 2>&1
mv meshtv$ver2.osf1.tar.gz ..
cp clearcase_bin/meshtv-install ..
cd ..
./meshtv-install $ver osf1 meshtv >> buildlog 2>&1
cd $dist
make distclean  >> buildlog 2>&1
./configure --without-readline --enable-parallel >> ../buildlog 2>&1
make >> ../buildlog 2>&1
cp bin/meshtv ../meshtvp$ver
cp bin/meshtvx ../meshtvxp$ver
cd ..
cp meshtvp$ver meshtvxp$ver meshtv/bin/dec-osf1-alpha
scp meshtv$ver2.osf1.tar.gz kickit:/scratch/brugger/meshtv$ver
rm -f resultlog
uname -a > resultlog 2>&1
ls -l >> resultlog 2>&1
mail brugger1@llnl.gov < resultlog
EOF

if [ $gps = true ]
then
   if [ $test = no ]
   then
      scp gps gps15:build_meshtv_gps
      scp $dist.sh gps15:/nfs/tmp1/brugger/gps
      ssh gps15 "chmod 750 build_meshtv_gps;./build_meshtv_gps" &
   fi
fi

#
# Build on blue, both serial and parallel versions.
#
rm -f blue
cat <<EOF > blue
#!/bin/sh
cd /nfs/tmp1/brugger
rm -rf blue/meshtvbuild
mkdir blue/meshtvbuild
cd blue/meshtvbuild
mv ../$dist.sh .
sh $dist.sh > buildlog 2>&1
cd $dist
env CFLAGS=-O2 ./configure --without-readline >> ../buildlog 2>&1
make >> ../buildlog 2>&1
clearcase_bin/meshtv-bin-dist -v $ver >> ../buildlog 2>&1
mv meshtv$ver2.aix.tar.gz ..
cp clearcase_bin/meshtv-install ..
cd ..
./meshtv-install $ver aix meshtv >> buildlog 2>&1
cd $dist
make distclean  >> buildlog 2>&1
env CFLAGS=-O2 ./configure --without-readline --enable-parallel >> ../buildlog 2>&1
make >> ../buildlog 2>&1
cp bin/meshtv ../meshtvp$ver
cp bin/meshtvx ../meshtvxp$ver
cd ..
cp meshtvp$ver meshtvxp$ver meshtv/bin/ibm-aix-pwr
scp meshtv$ver2.aix.tar.gz kickit:/scratch/brugger/meshtv$ver
rm -f resultlog
uname -a > resultlog 2>&1
ls -l >> resultlog 2>&1
mail brugger1@llnl.gov < resultlog
EOF

if [ $blue = true ]
then
   if [ $test = no ]
   then
      scp blue blue:build_meshtv_blue
      scp $dist.sh blue:/nfs/tmp1/brugger/blue
      ssh blue "chmod 750 build_meshtv_blue;./build_meshtv_blue" &
   fi
fi

#
# Build on riptide, both serial and parallel versions.
#
rm -f riptide
cat <<EOF > riptide
#!/bin/sh
cd /nfs/tmp1/brugger
rm -rf riptide/meshtvbuild
mkdir riptide/meshtvbuild
cd riptide/meshtvbuild
mv ../$dist.sh .
sh $dist.sh > buildlog 2>&1
cd $dist
env CC=cc CFLAGS="-O2 -64 -mips4" ./configure --without-readline >> ../buildlog 2>&1
env PARALLEL=20 make -P >> ../buildlog 2>&1
cp /usr/local/apps/meshtv/bin/mpeg_encode bin
clearcase_bin/meshtv-bin-dist -v $ver >> ../buildlog 2>&1
mv meshtv$ver2.irix6.tar.gz ..
cp clearcase_bin/meshtv-install ..
cd ..
./meshtv-install $ver irix6 meshtv >> buildlog 2>&1
cd $dist
make distclean  >> buildlog 2>&1
env CC=cc CFLAGS="-O2 -64 -mips4" ./configure --without-readline --enable-parallel >> ../buildlog 2>&1
env PARALLEL=20 make -P >> ../buildlog 2>&1
cp bin/meshtv ../meshtvp$ver
cp bin/meshtvx ../meshtvxp$ver
cd ..
cp meshtvp$ver meshtvxp$ver meshtv/bin/sgi-irix6-mips2
rm -f resultlog
uname -a > resultlog 2>&1
ls -l >> resultlog 2>&1
mail brugger1@llnl.gov < resultlog
EOF

if [ $riptide = true ]
then
   if [ $test = no ]
   then
      scp riptide riptide:build_meshtv_riptide
      scp $dist.sh riptide:/nfs/tmp1/brugger/riptide
      ssh riptide "chmod 750 build_meshtv_riptide;./build_meshtv_riptide" &
   fi
fi

#
# Clean up.
#
if [ $test = no ]
then
   rm hyper kickit sunspot gps blue riptide
fi
