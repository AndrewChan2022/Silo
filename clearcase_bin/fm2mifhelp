#!/usr/local/bin/perl

use Env;

if (@ARGV == 0)
{
    die "No files specified.\n";
}

# Set up the boldfacing escape directives.
$bold = "\e[1m";
$unbold = "\e[m";

# Tell pipes to flush after every write or print
$| = 1;

foreach $file (@ARGV)
{
    print "${bold}Converting FrameMaker file \"$file\" into a MIF file.${unbold}\n";

    # Copy the file to a temp file
    $tempfile = "/tmp/framecopy$$";
    $status = system("cp $file $tempfile");
    $status /= 256;
    die "Unable to make temporary file \"$tempfile\".\n" if ($status != 0);
    chmod 0640, $tempfile;

    # Set up the fmbatch command file to turn the FrameMaker file into a MIF file.
    open(TEMP,">/tmp/fmbatch$$") || die "Can't create temporary file.";
    print TEMP <<"EOF";
Open $tempfile
SaveAs m $tempfile $file.MIF
Quit
EOF
    close(TEMP);

    # Run fmbatch on the command file.
    $status = system("fmbatch /tmp/fmbatch$$ > /dev/null 2>&1 ");
    $status /= 256;
    if ($status != 0)
    {
        die "ERROR: fmbatch failed while running /tmp/fmbatch$$.\n";
    }
    unlink("/tmp/fmbatch$$");
    unlink($tempfile);

    # Run mifhelp on the MIF file.
    print "${bold}Running \"mifhelp\".${unbold}\n";
    $status = system("/MeshTV_vob/docs/MeshTV/users_book/mifhelp/mifhelp $file.MIF");
    $status /= 256;
    if ($status != 0)
    {
        die "ERROR: mifhelp failed.\n";
    }
    unlink("$file.MIF");
    unlink("$file.MIF.backup");
}

print "${bold}Done.${unbold}\n";
