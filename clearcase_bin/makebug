#!/bin/sh

lines=`cat $0 | wc -l`
lines=`expr $lines - 14`
tail -$lines $0 > /tmp/runperl$$
echo "# $0 $*" >> /tmp/runperl$$
while [ $# -ne 0 ]
do
    line=$1
    shift
    totline="$totline\`$line"
done
exec perl /tmp/runperl$$ $0 $totline

# Perl begins here.

# This script creates a new view that is defined to work on a bugfix 
# development branch.  It also creates the branch, if it isn't already created.

unlink($0);

# strippath separates a fully-expanded filename into its path and file
# parts.  If the fully-expanded filename does not have a path componenent, a
# NULL string is returned as the path.  The returned value is a list with the
# filename first and the path second, so that you can ignore the path if
# you like:
#           ($file) = &strippath($bigname);

sub strippath
{
    local($fullname) = @_;

    $fullname =~ m|^(.*/)?([^/]*)$|;
    ($path,$file) = ($1,$2);
    return($file,$path);
}

($0) = &strippath(shift);

$args = "@ARGV";
$args =~ s/^.//;
@ARGV = split('\`',$args);

# The real script begins here

$usage = "\nUSAGE: makebug -brtype branch|\"none\" -tag view_tag view_storage_directory\n";

require "newgetopt.pl";
&NGetOpt("brtype=s","tag=s");

if ($opt_brtype =~ /^\s*$/)
{
    print STDERR "Please specify a branch type name.\n";
    print STDERR "$usage\n";
    exit(-1);
}

if ($opt_tag =~ /^\s*$/)
{
    print STDERR "Please specify a view tag.\n";
    print STDERR "$usage\n";
    exit(-1);
}

if ($opt_tag !~ /^meshtv_/)
{
    print STDERR "The view tag \"$opt_tag\" does not begin with \"meshtv_\".\n";
    exit(-1);
}

if ($opt_brtype =~ /\s/)
{
    print STDERR "The branch type \"$opt_brtype\" contains whitespace.\nThis is not allowed.\n";
    exit(-1);
}

if ($opt_tag =~ /\s/)
{
    print STDERR "The view tag \"$opt_tag\" contains whitespace.\nThis is not allowed.\n";
    exit(-1);
}

if (@ARGV == 0)
{
    print STDERR "Please specify a view storage directory.\n";
    print STDERR "$usage\n";
    exit(-1);
}

if (@ARGV > 1)
{
    print STDERR "Too many arguments specified.\n";
    print STDERR "$usage\n";
    exit(-1);
}

$storage_dir = shift;

if ($storage_dir =~ /\s/)
{
    print STDERR <<"EOF";
The storage directory contains whitespace.
Your shell may not be happy with this.  But what do I care?
Continuing...
EOF
}

open(MAIL,"|/usr/lib/sendmail -t");
chomp($who = `whoami`);
print MAIL <<"EOF";
To: ahern\@llnl.gov
From: $who
Subject: makebug

makebug
EOF
print MAIL `date`;
print MAIL <<"EOF";
Tag: $opt_tag
Brtype: $opt_brtype
EOF

# Get the name of the current branch
open(NB,"/home/meshtv/current_release_branch");
($full_current_release_branch,$current_release_label) = (<NB> =~ /^(\S+)\s+(\S+)/);
close(NB);
($current_release_branch) = ($full_current_release_branch =~ m|^/main/(.*)$|);

# Search for the given branch.
if ($opt_brtype ne "none")
{
    $result = `cd /MeshTV_vob ; cleartool lstype -short brtype:$opt_brtype 2> /dev/null`;
    chomp($result);
    $found = ($result ne "");

    if ($found == 0)
    {
        print STDERR "Creating branch type \"$opt_brtype\".\n";
        system("cleartool mkbrtype -vob /MeshTV_vob $opt_brtype");
    } else
    {
        print "Branch \"$opt_brtype\" already exists, so I'll use that.\n";
    }
} else {
    print STDERR "Branch set as \"none\".  Creating default bugfix view.\n";
}

# Search for the given view.
@views = `cleartool lsview`;
for $view (sort @views)
{
    chop($view);
    $view =~ s/^\*//;
    $view =~ s/^\s*//;
    ($view) = ($view =~ /^(\S+)\s/);
    if ($opt_tag eq $view)
    {
        print STDERR <<"EOF";
The view tag "$opt_tag" already exists.
Please specify a different one.
EOF
        print STDERR <<"EOF" unless ($opt_brtype eq "none");

Note that the branch type "$opt_brtype" still exists.
EOF
        exit(-1);
    }
}

print STDERR "\nAttempting to create view \"$opt_tag\".\n";
$status = system("cleartool mkview -tag $opt_tag $storage_dir > /dev/null");
$status /= 256;
if ($status != 0)
{
    print STDERR <<"EOF" if ($opt_brtype ne "none");

An error occurred while creating view
"$opt_tag".
The view was not created.  However, branch type
"$opt_brtype" still exists.
EOF
    print STDERR <<"EOF" if ($opt_brtype eq "none");

An error occurred while creating view
"$opt_tag".  The view was not created.
EOF
    exit(-1);
}

print STDERR "View \"$opt_tag\" created.\n";

$config_spec_file = "/tmp/config_spec$$";
if (open(CONFIG_SPEC,">$config_spec_file") == 0)
{
    if ($opt_brtype ne "none")
    {
        print STDERR <<"EOF";
Unable to create a config spec file.

However, the view "$opt_tag" has been created with a default mainline config
spec.  This view is not appropriate for doing work on bugfix branch
"$opt_brtype".  You will have to manually set the config spec to be:

    element * CHECKEDOUT
    element * .../$opt_brtype/LATEST
    element * $full_current_release_branch/LATEST -mkbranch $opt_brtype
EOF
        print STDERR <<"EOF" if ($current_release_branch ne "");
    element * /main/LATEST -mkbranch $current_release_branch
EOF
        print STDERR <<"EOF";
Also, branch type "$opt_brtype" still exists.
EOF
    } else {
        print STDERR <<"EOF";
Unable to create a config spec file.

However, the view "$opt_tag" has been created with a default mainline config
spec.  This view is not appropriate for a view of the "$current_release_branch"
branch.  You will have to manually set the config spec to be:

    element * CHECKEDOUT
    element * $full_current_release_branch/LATEST
EOF
        print STDERR <<"EOF" if ($current_release_branch ne "");
    element * /main/LATEST -mkbranch $current_release_branch
EOF
    }

    exit(-1);
}

# Here's a description of the new view spec:
#
# The first line says to see any files that are currently checked out.
# Then look at the latest version on my bugfix development branch.
# Then look at the latest version on the current release branch.
# Then look at the latest version on the mainline, which will have the last 
#     released version.
#
# If you specified "none" as the branch, the view spec will be smaller, and is 
# described as:
#
# The first line says to see any files that are currently checked out
# Then look at the latest version on the current release branch.
# Then look at the latest version on the mainline, which will have the last 
#     released version.

if ($opt_brtype ne "none")
{
    print CONFIG_SPEC <<"EOF";
# View configured for bugfix work on branch "$opt_brtype"
element * CHECKEDOUT
element * .../$opt_brtype/LATEST
element * $full_current_release_branch/LATEST -mkbranch $opt_brtype
EOF
    print CONFIG_SPEC <<"EOF" if ($current_release_branch ne "");
element * /main/LATEST -mkbranch $current_release_branch
EOF

} else {

    print CONFIG_SPEC "# View configured to see the current bugfix release branch\n"
        if ($current_release_branch eq "");
    print CONFIG_SPEC "# View configured to see the $current_release_branch branch\n"
        if ($current_release_branch ne "");
    print CONFIG_SPEC <<"EOF";
element * CHECKEDOUT
element * $full_current_release_branch/LATEST
EOF
    print CONFIG_SPEC <<"EOF" if ($current_release_branch ne "");
element * /main/LATEST -mkbranch $current_release_branch
EOF

}
close(CONFIG_SPEC);

$system = system("cleartool setcs -tag $opt_tag $config_spec_file");
$system /= 256;
if ($system != 0)
{
    if ($opt_brtype ne "none")
    {
        print STDERR <<"EOF";
An error occurred while setting the config spec for the view
"$opt_tag".  This view thus has a default mainline config spec.
You must set the config spec yourself to be:

    element * CHECKEDOUT
    element * .../$opt_brtype/LATEST
    element * $full_current_release_branch/LATEST -mkbranch $opt_brtype
EOF
        print STDERR <<"EOF" if ($current_release_branch ne "");
    element * /main/LATEST -mkbranch $current_release_branch
EOF
        print STDERR <<"EOF";
Note that the branch type "$opt_brtype" still exists.
EOF
    } else {
        print STDERR <<"EOF";
An error occurred while setting the config spec for the view
"$opt_tag".  This view thus has a default mainline config spec.
You must set the config spec yourself to be:

    element * CHECKEDOUT
    element * $full_current_release_branch/LATEST
EOF
        print STDERR <<"EOF" if ($current_release_branch ne "");
    element * /main/LATEST -mkbranch $current_release_branch
EOF
    }
    unlink($config_spec_file);
    exit(-1);
}

unlink($config_spec_file);
print STDERR <<"EOF" if ($opt_brtype eq "none");

View "$opt_tag" has now been set up to see the
bugfix branch "$current_release_branch".

Do a "cleartool setview -login $opt_tag" to use the new bugfix view.
EOF
print STDERR <<"EOF" if ($opt_brtype ne "none");

View "$opt_tag" has now been set up to do bugfix
work on the bugfix branch "$opt_brtype".

Do a "cleartool setview -login $opt_tag" to use the new bugfix view.
EOF
