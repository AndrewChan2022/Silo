#!/bin/sh
#
# Use this script to update the version number for MeshTV/Silo
# If you just want to incriment the version number, pass '++'
# as arg $1. Otherwise, pass the desired version number
#
# If this version (of silo) is supposed to be compatible with
# the older version, specify 'compat' as the second arg ($2).
# Otherwise, specify nothing.
#

old_version=`cat /MeshTV_vob/VERSION`
old_maj=`echo $old_version | cut -d'.' -f1`
old_min=`echo $old_version | cut -d'.' -f2`
old_pat=`echo $old_version | cut -d'.' -f3 | cut -d'-' -f1`
old_pre=`echo $old_version | grep pre | cut -d'-' -f2 | cut -d'e' -f2`
old_prestr=""
new_prestr=""

new_version=$1
if test "$new_version" = "++"; then
    new_maj=$old_maj
    new_min=$old_min
    if test -n "$old_pre"; then
        new_pat=$old_pat
        new_pre=`expr $old_pre + 1`
	old_prestr="_pre$old_pre"
	new_prestr="_pre$new_pre"
    else
        new_pat=`expr $old_pat + 1`
    fi
else
    new_maj=`echo $new_version | cut -d'.' -f1`
    new_min=`echo $new_version | cut -d'.' -f2`
    new_pat=`echo $new_version | cut -d'.' -f3 | cut -d'-' -f1`
    new_pre=`echo $new_version | grep pre | cut -d'-' -f2 | cut -d'e' -f2`
    if test -n "$new_pre"; then
        new_prestr="_pre$new_pre"
    fi
fi

compat=0
if test "$2" = "compat"; then
   compat=1
fi

version_files="/MeshTV_vob/silo/tools/browser/browser.h \
               /MeshTV_vob/silo/tools/browser/sample.init \
               /MeshTV_vob/VERSION \
               /MeshTV_vob/silo/silo/silo.h \
               /MeshTV_vob/silo/silo/silo.c" 

cleartool co -c 'updating version number' $version_files 

# fix the VERSION file
if test -n "$new_pat"; then
    new_prestr_tmp=`echo $new_prestr | tr _ -`
    echo ${new_maj}.${new_min}.${new_pat}${new_prestr_tmp} > /MeshTV_vob/VERSION
else
    echo ${new_maj}.${new_min} > /MeshTV_vob/VERSION
fi

# fix silo.h
if test -n "$new_pat"; then
    if test -n "$old_pat"; then
        sed -e "s/Silo_version_${old_maj}_${old_min}_${old_pat}${old_prestr}/Silo_version_${new_maj}_${new_min}_${new_pat}${new_prestr}/" /MeshTV_vob/silo/silo/silo.h > /MeshTV_vob/silo/silo/silo.h.new
    else
        sed -e "s/Silo_version_${old_maj}_${old_min}/Silo_version_${new_maj}_${new_min}_${new_pat}/" /MeshTV_vob/silo/silo/silo.h > /MeshTV_vob/silo/silo/silo.h.new
    fi
else
    if test -n "$old_pat"; then
        sed -e "s/Silo_version_${old_maj}_${old_min}_${old_pat}${old_prestr}/Silo_version_${new_maj}_${new_min}/" /MeshTV_vob/silo/silo/silo.h > /MeshTV_vob/silo/silo/silo.h.new
    else
        sed -e "s/Silo_version_${old_maj}_${old_min}/Silo_version_${new_maj}_${new_min}/" /MeshTV_vob/silo/silo/silo.h > /MeshTV_vob/silo/silo/silo.h.new
    fi
fi
mv /MeshTV_vob/silo/silo/silo.h.new /MeshTV_vob/silo/silo/silo.h

# fix silo.c
if test $compat -eq 1; then
    old_pat1=`expr $old_pat - 1`
    new_pat1=`expr $new_pat - 1`
    old_pre1str=""
    if test -n "$old_pre"; then
        old_pre1=`expr $old_pre - 1`
        old_pre1str="_pre"$old_pre1
    fi
    new_pre1str=""
    if test -n "$new_pre"; then
        new_pre1=`expr $new_pre - 1`
        new_pre1str="_pre"$new_pre1
    fi
    sed -e "s/int Silo_version_${old_maj}_${old_min}_${old_pat1}${old_pre1str} = 0\;/int Silo_version_${old_maj}_${old_min}_${old_pat1}${old_prestr} = 0\;\nint Silo_version_${new_maj}_${new_min}_${new_pat1}${new_pre1str} = 0\;/" /MeshTV_vob/silo/silo/silo.c > /MeshTV_vob/silo/silo/silo.c.new
else
    if test -n "$old_pat"; then
        sed -e "s/int Silo_version_._._. = 0;//" /MeshTV_vob/silo/silo/silo.c > /MeshTV_vob/silo/silo/silo.c.new
    else
        sed -e "s/int Silo_version_._. = 0;//" /MeshTV_vob/silo/silo/silo.c > /MeshTV_vob/silo/silo/silo.c.new
    fi
fi
mv /MeshTV_vob/silo/silo/silo.c.new /MeshTV_vob/silo/silo/silo.c

# fix browser
tmp_old_pat=$old_pat
if test -z "$old_pat"; then
    tmp_old_pat=0
fi
tmp_new_pat=$new_pat
if test -z "$new_pat"; then
    tmp_new_pat=0
fi
sed -e "s/#define BROWSER_VERSION ${old_maj}/#define BROWSER_VERSION ${new_maj}/" -e "s/#define BROWSER_PATCH   ${old_min}0${tmp_old_pat}${old_pre}/#define BROWSER_PATCH   ${new_min}0${tmp_new_pat}${new_pre}/" /MeshTV_vob/silo/tools/browser/browser.h > /MeshTV_vob/silo/tools/browser/browser.h.new
mv /MeshTV_vob/silo/tools/browser/browser.h.new /MeshTV_vob/silo/tools/browser/browser.h

# fix sample.init
sed -e "s/browser_version = ${old_maj}.${old_min}0${tmp_old_pat}${old_pre}/browser_version = ${new_maj}.${new_min}0${tmp_new_pat}${new_pre}/" /MeshTV_vob/silo/tools/browser/sample.init > /MeshTV_vob/silo/tools/browser/sample.init.new
mv /MeshTV_vob/silo/tools/browser/sample.init.new /MeshTV_vob/silo/tools/browser/sample.init

for f in $version_files; do
    echo "Updated $f"
done
